### AutoHEC ###
Code repository for automation scripts related to the Metropolitan Water
Reclamation District of Greater Chicago Watershed Release Rate project
at the Illinois State Water Survey (2015-2016).
  *Developed using Python 2.7.11, HEC-HMS 3.5, HEC-RAS 4.0, and HEC-DSSVue 2.0.1
  *Creator(s): Optimatics (optimatics.com); Nicole JS Gaynor, ISWS
  *Technical documentation in AutoHEC/src/README.txt

## Purpose ##
This script was built to split subbasins in to a developed and
an undeveloped portion based on a proposed future redevelopment rate.
Then it applies a release rate to the reservoirs in each subbasin.
The release rate is currently a single value for all subbasins in the
automation, which can be manually edited after running InitHMS.py and
before running HEC-HMS the second time in the *_input.json file
(inputFileName defined in the parent_hecConfig_*.py file for the
project), where * is the HMS project name. **This script depends on the *.u##
file already being updated to have subbasins and reservoirs point to
the new Junction names, which is "JN [subbasin name]".**


## Where to get the code ##
This code is available at https://github.com/njsgaynor/AutoHEC


## What you need to run this code ##
* more details are available under "System Requirements" in README.txt *
--Python 2.7.11 (code has not been tested with any other version)
--HEC-DSSVue downloaded
--HEC-HMS and HEC-RAS installed


## How to configure your run ##
parent_hecConfig_*.py sets the overall configuration for the watershed. This
includes the location of HEC-HMS, the model version (i.e. directory name),
and model characteristics. *_hecConfig.py sets options specific to each
HEC-HMS run listed in the command-line input file in runModel.cmd.


## Running the Scripts ##
How to run code that splits basins and runs models**:
1. Modify *_hecConfig.py files to find the files that need to be
   modified and to reflect the characteristics of the future subbasins.
2. Create a text file that lists the prefixes for the *_hecConfig.py
   files needed for the HEC-HMS runs. Use this file name as the input in
   runModel.cmd.
3. Create text files called "alt_RR_basins.txt" and "alt_RR_basins2.txt"
   that list the subbasins that should use the alternative release rates
   (releaseratealt and releaseratealt2) instead of the regular release
   rate. This file needs to exist and should be empty if all the subbasins
   use the regular release rate.
4. Open Windows Command Prompt.
5. Change to directory containing runModel.cmd (AutoHEC/src)
   directory ("dir" lists directory contents and "cd" changes directory).
6. Type "runModel.cmd" into the Windows command line and press Enter.
   Output will be saved to output.txt.
**see README in SplitBasins directory for how to run the subbasin
splitting code on its own

## Error Checking ##
Be sure to check AutoHEC/src/output.txt to make sure that there were no
errors. Common errors may include:
1. Jython/Java error, which would appear below the blocks set off in
   colons (which indicates when the Jython interpreter starts in
   HEC-DSSVue). This may indicate a corrupted file. Try recreating the
   version directory from the source model.
2. HEC-HMS error, which would be indicated after one of the HEC-HMS runs
   on the line that starts with "End HEC-HMS" as "Exit status = -1". Try
   manually running HEC-HMS. The most likely problem is that a reservoir
   overflowed and the max storage in the rating curve needs to be slightly
   increased (by maybe 1%).
3. HEC-RAS runs in an absurdly short time (less than 70 seconds or so).
   This will show up on the last line of the output file. Try running the
   model manually in HEC-RAS to make sure it runs to completion. The most
   likely problem is that the model became unstable. Try using a different
   time step or locating where the model becomes unstable. Slightly
   adjusting HTAB parameters at unstable cross sections may also help model
   stability.

## Notes ##
[none at the moment]
